name: CI

on:
    push:
        branches: [ main, master ]
        tags: [ '*' ]
    pull_request:
        branches: [ '**' ]
    workflow_dispatch:

jobs:
    quality-and-tests:
        name: PHP ${{ matrix.php }} + Symfony ${{ matrix.symfony }}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [ '8.1', '8.2', '8.3', '8.4' ]
                symfony: [ '5.4', '6.4', '7.*' ]
                exclude:
                  - php: '8.1'
                    symfony: '7.*'
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: none
                  tools: composer:v2
                  extensions: mbstring, intl, json, dom, curl

            - name: Get Composer cache directory
              id: composer-cache
              run: |
                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache Composer dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ matrix.symfony }}-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-${{ matrix.php }}-${{ matrix.symfony }}-
                      ${{ runner.os }}-composer-

            - name: Configure dependencies for matrix
              run: |
                  composer require --no-interaction --no-update "symfony/framework-bundle:${{ matrix.symfony }}"

            - name: Install dependencies
              run: composer update --prefer-dist --no-interaction --no-progress --ansi

            - name: Validate composer
              run: composer validate --ansi

            - name: PHP CS Fixer (dry-run)
              run: vendor/bin/php-cs-fixer --version && vendor/bin/php-cs-fixer fix --dry-run --diff --ansi

            - name: Rector (dry-run)
              run: vendor/bin/rector --version && vendor/bin/rector process --dry-run --ansi

            - name: PHPStan
              run: vendor/bin/phpstan --version && vendor/bin/phpstan analyse --no-progress --ansi

            - name: PHPUnit
              run: |
                  vendor/bin/phpunit --version
                  vendor/bin/phpunit --testdox --colors=always

    release:
        name: Create Release
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/')
        needs: [quality-and-tests]
        permissions:
            contents: write
        steps:
            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  generate_release_notes: true
